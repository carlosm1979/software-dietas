# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI and Deploy Master to Page

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Build
      working-directory: ./webapp
      run: |
        npm install
        npm run build
        npm run jest
        npm run cy:run

    - name: Archive artifact Linux
      shell: sh
      if: runner.os == 'Linux'
      run: |
        echo ::group::Archive artifact
        tar \
          --dereference --hard-dereference \
          --directory "./webapp/build" \
          -cvf "$RUNNER_TEMP/artifact.tar" \
          --exclude=.git \
          --exclude=.github \
          .
        echo ::endgroup::
      env:
        INPUT_PATH: "./webapp/build"

    - name: Archive artifact macOS
      shell: sh
      if: runner.os == 'macOS'
      run: |
        echo ::group::Archive artifact
        gtar \
          --dereference --hard-dereference \
          --directory "./webapp/build" \
          -cvf "$RUNNER_TEMP/artifact.tar" \
          --exclude=.git \
          --exclude=.github \
          .
        echo ::endgroup::
      env:
        INPUT_PATH: "./webapp/build"
 
    - name: Archive artifact Windows
      shell: bash
      if: runner.os == 'Windows'
      run: |
        echo ::group::Archive artifact
        tar \
          --dereference --hard-dereference \
          --directory "./webapp/build" \
          -cvf "$RUNNER_TEMP\artifact.tar" \
          --exclude=.git \
          --exclude=.github \
          --force-local \
          "."
        echo ::endgroup::
      env:
        INPUT_PATH: "./webapp/build"

    - name: Upload artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: "github-pages"
        path: ${{ runner.temp }}/artifact.tar
        retention-days: "1"
        if-no-files-found: error

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4